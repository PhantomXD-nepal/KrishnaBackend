from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b5efc17d1c34'
down_revision: Union[str, Sequence[str], None] = '7b6608527de5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_unique_constraint("uq_students_user_id", ['user_id'])
        # Removed op.drop_constraint for parent_id foreign key, relying on drop_column to handle it implicitly
        batch_op.create_foreign_key("fk_students_user_id_users", 'users', ['user_id'], ['id'])
        batch_op.drop_column('parent_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint("fk_students_user_id_users", type_='foreignkey')
        batch_op.create_foreign_key("fk_students_parent_id_users", 'users', ['parent_id'], ['id'])
        batch_op.drop_constraint("uq_students_user_id", type_='unique')
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###
